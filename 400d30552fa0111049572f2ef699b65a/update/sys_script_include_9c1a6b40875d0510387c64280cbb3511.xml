<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_ibmrt_gdpva.GuardiumProcessorAssessmentTest</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>GuardiumProcessorAssessmentTest</name>
        <script><![CDATA[var GuardiumProcessorAssessmentTest = Class.create();
GuardiumProcessorAssessmentTest.prototype =
    Object.extendsObject(GuardiumProcessorBase, {

        processEntry: function(datum, cm) {
            var exists = false;

            // parse database record into a structure with ServiceNow fields
            var grd_rec = this.transform(datum, cm);

            // find duplicate
            var sn_rec = new GlideRecord(GuardiumAPI.TABLE_AT);
            sn_rec.addQuery('id', '=', grd_rec['id']);
            sn_rec.addQuery('fqdn_cm', cm.sys_id);
			sn_rec.setLimit(1);
            sn_rec.query();
            if (sn_rec.next()) {
                exists = true;
            }

            if (!exists) {
                sn_rec.initialize();
            } else {
                // if no change, then skip
                var skip = true;
                for (var f in grd_rec) {
                    if (grd_rec[f] != sn_rec.getValue(f)) {
                        skip = false;
                    }
                }
                if (skip) {
                    this.skipped_vi++;
                    return [cm.sys_id, sn_rec.getValue('id')].join(':');
                }
            }

            // Map incoming fields to destination fields
            for (var p in grd_rec) {
                sn_rec.setValue(p, grd_rec[p]);
            }

            // Insert or Update
            sn_rec.setWorkflow(false);
            if (!exists) {
                sn_rec.insert();
                this.inserted_vi++;
            } else {
                sn_rec.update();
                this.updated_vi++;
            }
            return [cm.sys_id, sn_rec.getValue('id')].join(':');
        },

        afterCM: function(cm, entry_map) {
			// remove any deleted assessments
            var sn_rec = new GlideRecord(GuardiumAPI.TABLE_AT);
            sn_rec.addQuery('fqdn_cm', cm.sys_id);
            sn_rec.query();
            while (sn_rec.next()) {
                var _id = sn_rec.getValue('id');
                var key = '';
                if (_id) {
                    key = [cm.sys_id, _id].join(':');
                }
                if (!key || !entry_map[key]) {
                    try {
                        // entry was removed on Guardium, delete the ServiceNow record
                        sn_rec.setValue("id", "");
                        sn_rec.deleteRecord();
                        this.deleted++;
                    } catch (errDel) {}
                }
            }
        },

        transform: function(datum, cm) {
            var assessmentName = datum['assessment_desc'];
            if (assessmentName && assessmentName.toLowerCase().indexOf('?assessmentdescription=') > 0) {
                // parse URL into a name
                var query = assessmentName.split('?')[1];
                var params = query.split('&');
                for (var i = 0; i < params.length; i++) {
                    var kv = params[i].split('=');
                    if ('assessmentdescription' == kv[0].toLowerCase()) {
                        assessmentName = decodeURIComponent(kv[1].replaceAll('+', '%20'));
                    }
                }
            }
            var rec = {
                name: assessmentName,
                id: "" + datum['assessment_id'],
                fqdn_cm: cm.sys_id
            };

            return rec;
        },

        type: 'GuardiumProcessorAssessmentTest'
    });]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-01-22 16:05:16</sys_created_on>
        <sys_id>9c1a6b40875d0510387c64280cbb3511</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>GuardiumProcessorAssessmentTest</sys_name>
        <sys_package display_value="IBM Guardium Data Protection" source="x_ibmrt_gdpva">400d30552fa0111049572f2ef699b65a</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="IBM Guardium Data Protection">400d30552fa0111049572f2ef699b65a</sys_scope>
        <sys_update_name>sys_script_include_9c1a6b40875d0510387c64280cbb3511</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-03-20 14:29:30</sys_updated_on>
    </sys_script_include>
</record_update>
