<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_ibmrt_gdpva.GuardiumIntegrationDatasource</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>IBM Guardium data-source synchronization script</description>
        <name>GuardiumIntegrationDatasource</name>
        <script><![CDATA[var GuardiumIntegrationDatasource = Class.create();
GuardiumIntegrationDatasource.prototype =
    Object.extendsObject(GuardiumIntegrationBase, {

        reportSources: 'Data-Sources',
        reportChanges: 'DataSource Changes',

        retrieveGuardiumData: function(gAPI, gr_cm, firstSync, startFrom, reportName) {
            try {
                // get report name override
                this.reportSources =
                    this.preferences.getValue('report_datasources') || this.reportSources;
                // get report name override
                this.reportChanges =
                    this.preferences.getValue('report_changes') || this.reportChanges;
            } catch (e) {}

            var reportParams = {
                QUERY_TO_DATE: this.defaultQueryTo(gAPI),
                DataSourceNameLike: "%"
            };

            reportParams['QUERY_FROM_DATE'] = firstSync ?
                '1970-01-01 12:00:00' :
                this.getPreviousRunDateTime(gAPI) || '1970-01-01 12:00:00';

			// Get and process DELETED entries first, then get and process existing data sources
            if (this.reportSources == reportName) {
                // Get all database entries
                return gAPI.getReportData(this.reportSources, reportParams, startFrom);
            } else {
                // Get changes as they occurred.  Normal sort is to show last operation first.
                var response = gAPI.getReportData(this.reportChanges, reportParams, startFrom, 'Timestamp', false);
                if (!response || response.hasMoreData) return response;

                // Done with data source changes.  Switch to actual data sources.
                return {
                    data: response.data,
                    reportName: this.reportSources,
                    hasMoreData: true,
                    startFrom: 1
                };
            }
        },

        type: 'GuardiumIntegrationDatasource'
    });]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-01-07 12:49:04</sys_created_on>
        <sys_id>0c8ce95787b84150387c64280cbb35d3</sys_id>
        <sys_mod_count>65</sys_mod_count>
        <sys_name>GuardiumIntegrationDatasource</sys_name>
        <sys_package display_value="IBM Guardium Data Protection" source="x_ibmrt_gdpva">400d30552fa0111049572f2ef699b65a</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="IBM Guardium Data Protection">400d30552fa0111049572f2ef699b65a</sys_scope>
        <sys_update_name>sys_script_include_0c8ce95787b84150387c64280cbb35d3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-09-29 15:17:09</sys_updated_on>
    </sys_script_include>
</record_update>
