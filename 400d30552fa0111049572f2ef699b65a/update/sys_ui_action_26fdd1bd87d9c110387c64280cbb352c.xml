<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>run_assessment_test</action_name>
        <active>true</active>
        <client>false</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments/>
        <condition>gs.hasRole('x_ibmrt_guard.user')</condition>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <format_for_configurable_workspace>false</format_for_configurable_workspace>
        <hint>Run this assessment test on specified node</hint>
        <isolate_script>false</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages/>
        <name>Run test</name>
        <onclick/>
        <order>999</order>
        <script><![CDATA[(function executeRule(current) {
    var fqdn_cm = current.getValue('fqdn_cm');
    if (fqdn_cm) {
        if (!current.node_ref) {
			// if empty, use the first collector found
			var gr = new GlideRecord(GuardiumAPI.TABLE_MU);
			gr.addQuery('fqdn_cm', '=', fqdn_cm);
			gr.addQuery('unit_type', '=', 'Collector');
			gr.query();
			var sys_id;
			while (gr.next()){
				sys_id = gr.getUniqueValue();
				// use the first "online" guardium managed collector
				var online = gr.getValue('online');
				if (true == online || 1 == online) {
					break;
				}
			}
			if (sys_id) {
				current.setValue('node_ref', sys_id);
				current.update();
			}
        }

        // run it
        var title = current.getDisplayValue(current.getDisplayName());
        gs.eventQueue(
            GuardiumAPI.EVENT_RUN_TEST,
            current,
            title,
            current.getValue('node_ref'),
            ""
        );

        // let user know the command was sent
        gs.addInfoMessage('Sent request to run assessment "' + 
            title + '"' + ' on ' + current.getDisplayValue('node_ref')
        );
    }
})(current);]]></script>
        <show_insert>false</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-01-27 16:31:07</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>26fdd1bd87d9c110387c64280cbb352c</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>Run test</sys_name>
        <sys_overrides/>
        <sys_package display_value="IBM Guardium Vulnerability Assessment" source="x_ibmrt_guard">400d30552fa0111049572f2ef699b65a</sys_package>
        <sys_policy/>
        <sys_scope display_value="IBM Guardium Vulnerability Assessment">400d30552fa0111049572f2ef699b65a</sys_scope>
        <sys_update_name>sys_ui_action_26fdd1bd87d9c110387c64280cbb352c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-06-23 17:57:22</sys_updated_on>
        <table>x_ibmrt_guard_assessment_test</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
