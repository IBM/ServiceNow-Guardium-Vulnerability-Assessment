<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_ibmrt_gdpva.GuardiumIntegrationTestResultDetail</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>IBM Guardium test result detail synchronization script</description>
        <name>GuardiumIntegrationTestResultDetail</name>
        <script><![CDATA[var GuardiumIntegrationTestResultDetail = Class.create();
GuardiumIntegrationTestResultDetail.prototype =
    Object.extendsObject(GuardiumIntegrationBase, {

		reportName: 'Security Assessment Export',
	
        retrieveGuardiumData: function(gAPI, gr_cm, firstSync) {
			try {
				// get report name override
				this.reportName = 
					gs.getProperty('x_ibmrt_gdpva.report.test_result_details', this.reportName);
			} catch(e){}

			var count = 0;
            var failures = 0;
            var errors = [];
			var defaultFromDate = 'NOW -' + this.num_of_days + ' DAY';
            var reportParams = {
                REMOTE_SOURCE: "",
                QUERY_FROM_DATE: firstSync ?
                    defaultFromDate : this.calculateQueryFrom(gAPI.cm.sys_id) || defaultFromDate
            };

            var gr_mu = new GlideRecord(GuardiumAPI.TABLE_MU);
            gr_mu.addQuery('fqdn_cm', '=', gAPI.cm.sys_id);
			gr_mu.addActiveQuery();
            gr_mu.query();

            // need to loop through all machines as tests can run on any unit_type
            var mu_data = [];
            while (gr_mu.next()) {
				count++;
                if (gAPI.cm.fqdn == gr_mu.getValue('fqdn') || 'Manager' == gr_mu.getValue('unit_type')) {
                    // Not remote
                    reportParams['REMOTE_SOURCE'] = '';
                } else {
                    // Ask CM to run the report on a remote machine
                    reportParams['REMOTE_SOURCE'] = gr_mu.getValue('fqdn');
                }

				try {
					// Oldest first
					var response = gAPI.getReportData(
						this.reportName, reportParams, 1, 'Execution Date');
					mu_data.push({
						name: gr_mu.getDisplayValue(gr_mu.getDisplayName()),
						fqdn: gr_mu.getValue('fqdn'),
						sys_id: gr_mu.getValue('sys_id'),
						data: response ? response.data : []
					});
                } catch (e) {
					failures++;
                    errors.push(
                        "Error while retreiving data from: " +
                        reportParams['REMOTE_SOURCE'] + '\n' + (e.message || e)
                    );
                    continue;
                }
            }

            if (count == failures) {                throw new Error(errors.join('\n'));
            }

            return {
                error: errors.join('\n'),
                data: mu_data
            };
        },

        type: 'GuardiumIntegrationTestResultDetail'
    });]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-01-07 13:40:20</sys_created_on>
        <sys_id>caf8359f87b84150387c64280cbb35e1</sys_id>
        <sys_mod_count>51</sys_mod_count>
        <sys_name>GuardiumIntegrationTestResultDetail</sys_name>
        <sys_package display_value="IBM Guardium Data Protection" source="x_ibmrt_gdpva">400d30552fa0111049572f2ef699b65a</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="IBM Guardium Data Protection">400d30552fa0111049572f2ef699b65a</sys_scope>
        <sys_update_name>sys_script_include_caf8359f87b84150387c64280cbb35e1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-03-04 14:17:05</sys_updated_on>
    </sys_script_include>
</record_update>
