<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sysevent_script_action">
    <sysevent_script_action action="INSERT_OR_UPDATE">
        <active>true</active>
        <condition_script/>
        <description/>
        <event_name>x_ibmrt_gdpva.ChangeDatabase</event_name>
        <name>EventHandler_ChangeDatabase</name>
        <order>100</order>
        <script><![CDATA[(function executeEventHandler(event, current) {
    if (!event) return;

    var name = '' + (event.parm1 || 'Export all matching databases');
    var details = (event.parm2 || '').split('|');
    if (details.length < 2) return;
    var operation = details[0].toLowerCase();
    var db_sys_id = details[1];

	var utils = new GuardiumExportDatasource();
    var gAPI;
	
    // Sync change with Guardium
    switch (operation) {
        case 'export-all':
            try {
                var resp = utils.run();
				var msg = [];
				for (var fqdn in resp) {
					msg.push(
						fqdn + '\t' + resp[fqdn]
					);
				}
                GuardiumLog.info("Number of exported data sources:\n " + msg.join('\n '), this.type);
            } catch (errIns) {
                GuardiumLog.error('', this.type, errIns);
            }
            break;

        case 'insert':
        case 'export':
        case 'update':
            try {
                if (utils.runOnce(current, 'export' == operation)) {
                    GuardiumLog.info("Successfully synchronized data source: " + name, this.type);
                }
            } catch (errSync) {
                GuardiumLog.error('', this.type, errSync);
            }
            break;

		case 'delete':
            if (db_sys_id) {
                // Get datasource record and delete it from Guardium
                var gr_ds = new GlideRecord(GuardiumAPI.TABLE_DB_GDP);
                if (gr_ds.get(db_sys_id)) {

                    // Delete datasource from Guardium
					var cm_sys_id = gr_ds.getValue('fqdn_cm');
					if (cm_sys_id) {
						try {
							// Delete the record
							gAPI = new GuardiumAPI(GuardiumAPI.getGlideRecordCM(cm_sys_id, true));
							gAPI.authenticate();
							gAPI.del('delete_datasource_by_id', {
								id: current.getValue(GuardiumAPI.CMDB_COL_DB_ID)
							});

							// Success!
							GuardiumLog.info('Successfully deleted data source: "' +
								name + '" from ' + gAPI.cm.fqdn, this.type);

						} catch (errDel) {
							GuardiumLog.error('', this.type, errDel);
						}
					}
					
					// Delete datasource from ServiceNow
					gr_ds.setWorkflow(false);
					gr_ds.deleteRecord();
                }
            }
            break;
    }

})(event, current);]]></script>
        <synchronous>false</synchronous>
        <sys_class_name>sysevent_script_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-02-07 15:40:57</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>968c31d587a10150387c64280cbb351f</sys_id>
        <sys_mod_count>26</sys_mod_count>
        <sys_name>EventHandler_ChangeDatabase</sys_name>
        <sys_overrides/>
        <sys_package display_value="IBM Guardium Vulnerability Assessment" source="x_ibmrt_gdpva">400d30552fa0111049572f2ef699b65a</sys_package>
        <sys_policy/>
        <sys_scope display_value="IBM Guardium Vulnerability Assessment">400d30552fa0111049572f2ef699b65a</sys_scope>
        <sys_update_name>sysevent_script_action_968c31d587a10150387c64280cbb351f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-06-14 19:33:38</sys_updated_on>
    </sysevent_script_action>
</record_update>
