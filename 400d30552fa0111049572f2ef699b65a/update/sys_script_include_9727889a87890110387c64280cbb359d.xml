<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_ibmrt_gdpva.GuardiumIntegrationManagedUnit</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>IBM Guardium managed unit synchronization script</description>
        <name>GuardiumIntegrationManagedUnit</name>
        <script><![CDATA[var GuardiumIntegrationManagedUnit = Class.create();
GuardiumIntegrationManagedUnit.prototype =
    Object.extendsObject(GuardiumIntegrationBase, {

        retrieveGuardiumData: function(gAPI) {
            // Guardium returns all date-time values in local time-zone
            // ServiceNow wants all date-time values to be in UTC
            // We must calculate the difference in minutes and store on the CM record.
            this.storeTimeZoneDifference(gAPI);

            // get all managed units
            var responseMU = gAPI.get("managed_units", {
                "verbose": "1"
            });

            // attempt to get this CM's information
            try {
                var responseCM = gAPI.get('unit_data');
                if (responseCM && responseCM.data) {
                    // convert and add this CM to the list of Guardium nodes
                    responseMU.data.push(this.transform(responseCM.data));
                }
            } catch (errAPI) {
                // Call failed.  It could be an older version. Push the CM onto the list
                responseMU.data.push({
                    "Unit Host": gAPI.cm.fqdn,
                    "Type": "Manager",
					"online": true
                });
            }

            return responseMU;
        },

        storeTimeZoneDifference: function(gAPI) {
            // ---- get time-zone offset from Login Report ----
            /* {
                    "User Name": "King Richard",
                    "Login Date And Time": "2022-02-14 12:14:17",
                    ...
            } */
            try {
                var gdt_now = new GlideDateTime();
                var resp_logins = gAPI.executeReport('Logins to Guardium Appliance', {
                    QUERY_FROM_DATE: "NOW -2 MINUTE",
                    QUERY_TO_DATE: "NOW +2 MINUTE",
                    "successful-login": "true"
                }, 1, 'Login Date And Time', true);
                if (resp_logins.data && resp_logins.data.length) {
                    var dt_last = '';
                    // First is most recent
                    for (var i = 0; i < resp_logins.data.length; i++) {
                        var login = resp_logins.data[i];
                        dt_last = login['Login Date And Time'];
                        if (gAPI.cm.username == login['User Name']) {
                            break;
                        }
                    }
                    if (dt_last) {
                        // calculate and store offset as a float
                        var gdt_local = new GlideDateTime(dt_last);
                        // minutes
                        var tz_offset =
                            Math.round((gdt_local.getNumericValue() - gdt_now.getNumericValue()) / 60000);

                        var gr_cm = GuardiumAPI.getGlideRecordCM(gAPI.cm.sys_id, true);
                        var current_offset = gr_cm.getValue('tz_offset') - 0;
                        if (current_offset != tz_offset) {
                            gr_cm.setValue('tz_offset', tz_offset);
                            gr_cm.setWorkflow(false);
                            gr_cm.update();

                            GuardiumLog.info(
                                "IBM Guardium last login time: " + dt_last + 
                                "\nNow in UTC: " + gdt_now.toString() + 
                                "\nTime Zone Offset: " + tz_offset, 
                                this.type
                            );
                        }
                    }
                }
            } catch (errLogins) {
                GuardiumLog.error('', this.type, errLogins);
            }
        },

        transform: function(unit_data) {
            // Unit data members are slightly different than Unit_type members
            return {
                "Unit Host": unit_data['Unit Host'],
                "IP": unit_data['IP'],
                "Type": unit_data['Unit Type'],
                "IP Mode": unit_data['IP Mode'],
                "Version": unit_data['Version'],
                "online": true
            };
        },

        type: 'GuardiumIntegrationManagedUnit'
    });]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-01-16 13:04:43</sys_created_on>
        <sys_id>9727889a87890110387c64280cbb359d</sys_id>
        <sys_mod_count>33</sys_mod_count>
        <sys_name>GuardiumIntegrationManagedUnit</sys_name>
        <sys_package display_value="IBM Guardium Data Protection" source="x_ibmrt_gdpva">400d30552fa0111049572f2ef699b65a</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="IBM Guardium Data Protection">400d30552fa0111049572f2ef699b65a</sys_scope>
        <sys_update_name>sys_script_include_9727889a87890110387c64280cbb359d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-11-28 14:09:01</sys_updated_on>
    </sys_script_include>
</record_update>
