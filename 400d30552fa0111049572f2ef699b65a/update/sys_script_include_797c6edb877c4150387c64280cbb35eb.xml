<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_ibmrt_gdpva.GuardiumProcessorTestResultSummary</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>IBM Guardium test-result processor script</description>
        <name>GuardiumProcessorTestResultSummary</name>
        <script><![CDATA[var GuardiumProcessorTestResultSummary = Class.create();
GuardiumProcessorTestResultSummary.prototype =
    Object.extendsObject(GuardiumProcessorBase, {

        beforeCM: function(cm, data) {
            this.gAPI = new GuardiumAPI(GuardiumAPI.getGlideRecordCM(cm.sys_id, true));
			//this.gAPI.authenticate();
        },

        processEntry: function(datum, cm) {
            for (var i = 0; i < datum.data.length; i++) {
                var exists = false;

                // parse database record into a structure with ServiceNow fields
                var grd_rec = this.transform(datum.data[i], datum, cm);

                // Update associated Assessment Test
                this.updateAssessmentTest(datum, cm, grd_rec);

                // find duplicate
                var sn_rec = new GlideRecord(GuardiumAPI.TABLE_TR);
                sn_rec.addQuery('name', '=', grd_rec['name']);
                sn_rec.addQuery('fqdn_cm', '=', grd_rec['fqdn_cm']);
                sn_rec.addQuery('last_scan_date', '=', grd_rec['last_scan_date']);
				sn_rec.setLimit(1);
                sn_rec.query();
                if (sn_rec.next()) {
                    exists = true;
                }

                if (!exists) {
                    sn_rec.initialize();
                } else {
                    // if no change, then skip
                    var skip = true;
                    for (var f in grd_rec) {
                        if (grd_rec[f] != sn_rec.getValue(f)) {
                            skip = false;
                        }
                    }
                    if (skip) {
                        this.skipped++;
                        return;
                    }
                }

                // Map incoming fields to destination fields
                for (var p in grd_rec) {
                    sn_rec.setValue(p, grd_rec[p]);
                }

                // Insert or Update
                if (!exists) {
                    sn_rec.insert();
                    this.inserted_vi++;
                } else {
                    sn_rec.update();
                    this.updated_vi++;
                }
            }
        },

        /*
            {
                "Assessment Description": "jeff mssqlcve",
                "Execution Date": "2021-12-28 10:31:55",
                "Overall Score": "0.82",
                "Recommendation": "Based on the tests performed under this assessment, data access of the defined database environments conform to best practices. You have a controlled environment in terms of the tests performed. You should consider scheduling this assessment as an audit task to continuously assess these environments. ",
                "Total # Of CIS Tests": "0",
                "Total # Of Passed CIS Tests": "0",
                "Total # Of STIG Tests": "0",
                "Total # Of Passed STIG Tests": "0",
                "Total # Of CVE Tests": "11",
                "Total # Of Passed CVE Tests": "9"
            },
        */
        transform: function(datum, mu, cm) {
            var fails_cis = (datum['Total # Of CIS Tests'] - 0) -
                (datum['Total # Of Passed CIS Tests'] - 0);
            var fails_stig = (datum['Total # Of STIG Tests'] - 0) -
                (datum['Total # Of Passed STIG Tests'] - 0);
            var fails_cve = (datum['Total # Of CVE Tests'] - 0) -
                (datum['Total # Of Passed CVE Tests'] - 0);

            var rec = {
                name: datum['Assessment Description'],
                fqdn_cm: cm.sys_id,
                node_ref: mu.sys_id,
                last_scan_date: this.gAPI.adjustTimeFromGuardium(datum['Execution Date']),
                last_scan_rating: 100 * (datum['Overall Score'] - 0),
                recommendation: datum['Recommendation'],
                detected_flaw_count: fails_cis + fails_stig + fails_cve,
				cis_flaw_count: fails_cis,
				cve_flaw_count: fails_cve,
				stig_flaw_count: fails_stig,
            };

            return rec;
        },

        updateAssessmentTest: function(mu, cm, grd_rec) {
            var exists = false;

            // find assessment test
            var sn_rec = new GlideRecord(GuardiumAPI.TABLE_AT);
            sn_rec.addQuery('name', '=', grd_rec['name']);
            sn_rec.addQuery('fqdn_cm', cm.sys_id);
			sn_rec.setLimit(1);
            sn_rec.query();
            if (sn_rec.next()) {

                // update this scan_summary record
                grd_rec['assessment_test'] = sn_rec.getValue('sys_id');

                // update assessment test
				sn_rec.setValue('node_ref', mu.sys_id);
                sn_rec.setValue('last_scan_date', grd_rec['last_scan_date']);
                sn_rec.setValue('last_scan_rating', grd_rec['last_scan_rating']);
                sn_rec.setValue('total_test_failures', grd_rec['detected_flaw_count']);

				sn_rec.setWorkflow(false);
                sn_rec.update();
            }
        },

        type: 'GuardiumProcessorTestResultSummary'
    });]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-01-07 17:24:19</sys_created_on>
        <sys_id>797c6edb877c4150387c64280cbb35eb</sys_id>
        <sys_mod_count>38</sys_mod_count>
        <sys_name>GuardiumProcessorTestResultSummary</sys_name>
        <sys_package display_value="IBM Guardium Data Protection" source="x_ibmrt_gdpva">400d30552fa0111049572f2ef699b65a</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="IBM Guardium Data Protection">400d30552fa0111049572f2ef699b65a</sys_scope>
        <sys_update_name>sys_script_include_797c6edb877c4150387c64280cbb35eb</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-11-05 18:03:35</sys_updated_on>
    </sys_script_include>
</record_update>
